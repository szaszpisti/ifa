<?
require_once('login.php');
require_once('fogado.inc');

class Tanar {

	function Tanar($tid) {

		$this->id = $tid;       # A tanár azonosítója
		$this->ODD = false;     # Ezzel nézzük, hogy van-e benne páratlan (5 perces) idõpont
		$this->fogad = false;   # Van-e a tanárnál fogadóóra bejegyezve

/*
		$this->diak[ido]        # "ido" idõpontban a diák azonosítója
		$this->dnev[ido]        # "ido" idõpontban a diák neve
		$this->IDO_min          # elsõ idõpontja
		$this->IDO_max          # utolsó idõpontja + 1
*/

		# Feltöltjük a tanár tulajdonságait
		if (($result = @pg_query("SELECT * FROM Tanar WHERE id=" . $this->id)) && (pg_num_rows($result)==1)) {
			$tan = pg_fetch_assoc($result);
			while(list($k, $v) = each($tan)) {
				$this->$k = $v;
			}
		}

		$q = "SELECT ido, diak, dnev, onev FROM Fogado AS F"
			. " LEFT OUTER JOIN Diak AS D ON (F.diak=D.id AND D.id>0)"
			. " WHERE F.fid=" . fid . " AND F.tanar=" . $tid . " ORDER BY ido";
		if (($result = pg_query($q)) && ($rows = pg_num_rows($result)) > 0) {
			$this->fogad = true;                             # ha van idõpontja akkor fogad
			for($i=0; $i<$rows; $i++) {
				$sor = pg_fetch_array($result, $i);
				if ($i==0) {                                  # a 0. a kezdõidõpont
					$this->IDO_min = $sor['ido'];
				}
				if (($sor['ido']%2) && ($sor['diak']>=0)) {   # ha páratlan
					$this->ODD = true;
				}
				$this->diak[$sor['ido']] = $sor['diak'];      # az idõponthoz beírjuk az azonosítót
				if (isset($sor['dnev'])) {                    # és a nevet
					$this->dnev[$sor['ido']] = $sor['dnev'] . " (" . $sor['onev'] . ")";
				}
			}
			$this->IDO_max = $sor['ido']+1;                  # az utolsó idõpont
		}
	}

}

?>
